// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.6.10;

contract TransactionDemo {
    
    uint256 private value = 0;
    address private owner;
    bool isStopped = false;
    
    constructor (uint256 amount) public {
        value = amount;
        owner = msg.sender;
    }
    
    modifier stoppedInEmergency {
        require(!isStopped, "contract disabled");
        _;
    }
    modifier ownerCheck {
        require(msg.sender == owner);
        _;
    }
    
    function deposit (uint256 amount) public ownerCheck stoppedInEmergency {
        value += amount;
    }
    
    function withdraw (uint256 amount) public ownerCheck stoppedInEmergency {
        int256 newValue = int256(value) - int256(amount);
        require(newValue >= 0, "funds insufficient");
        
        value = uint256(newValue);
    }
    
    function balance () public view returns (uint256) {
        return value;
    }
    
    function disableContract () public ownerCheck {
        isStopped = true;
    }
    
    function enableContract () public ownerCheck {
        isStopped = false;
    }
    
}